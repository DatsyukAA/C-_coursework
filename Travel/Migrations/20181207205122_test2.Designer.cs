// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Data;

namespace Travel.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20181207205122_test2")]
    partial class test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<int?>("ClientId");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Status");

                    b.Property<int?>("VoucherId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CounryId");

                    b.Property<int?>("HotelId");

                    b.Property<int?>("ResortId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CounryId");

                    b.HasIndex("HotelId");

                    b.HasIndex("ResortId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.TourModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.TourModels.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<string>("HotelName");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.TourModels.Resort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HotelId");

                    b.Property<string>("ResortName");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Resorts");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EnableFrom");

                    b.Property<DateTime>("EnableTo");

                    b.Property<int?>("OperatorId");

                    b.Property<int?>("ReportId");

                    b.Property<bool>("Status");

                    b.Property<int?>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.HasIndex("ReportId");

                    b.HasIndex("TourId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.OperatorModels.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OperatorId");

                    b.Property<string>("ReportText");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.Order", b =>
                {
                    b.HasOne("Travel.Models.Entites.UserModels.Client", "Client")
                        .WithMany("TravelHistory")
                        .HasForeignKey("ClientId");

                    b.HasOne("Travel.Models.Entites.OrderModels.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.Tour", b =>
                {
                    b.HasOne("Travel.Models.Entites.OrderModels.TourModels.Country", "Counry")
                        .WithMany()
                        .HasForeignKey("CounryId");

                    b.HasOne("Travel.Models.Entites.OrderModels.TourModels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId");

                    b.HasOne("Travel.Models.Entites.OrderModels.TourModels.Resort", "Resort")
                        .WithMany()
                        .HasForeignKey("ResortId");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.TourModels.Hotel", b =>
                {
                    b.HasOne("Travel.Models.Entites.OrderModels.TourModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.TourModels.Resort", b =>
                {
                    b.HasOne("Travel.Models.Entites.OrderModels.TourModels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId");
                });

            modelBuilder.Entity("Travel.Models.Entites.OrderModels.Voucher", b =>
                {
                    b.HasOne("Travel.Models.Entites.UserModels.Operator")
                        .WithMany("VoucherList")
                        .HasForeignKey("OperatorId");

                    b.HasOne("Travel.Models.Entites.UserModels.OperatorModels.Report")
                        .WithMany("VoucherList")
                        .HasForeignKey("ReportId");

                    b.HasOne("Travel.Models.Entites.OrderModels.Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.Administrator", b =>
                {
                    b.HasOne("Travel.Models.Entites.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.Client", b =>
                {
                    b.HasOne("Travel.Models.Entites.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.Operator", b =>
                {
                    b.HasOne("Travel.Models.Entites.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Travel.Models.Entites.UserModels.OperatorModels.Report", b =>
                {
                    b.HasOne("Travel.Models.Entites.UserModels.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");
                });
#pragma warning restore 612, 618
        }
    }
}
